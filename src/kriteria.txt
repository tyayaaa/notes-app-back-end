/** KRITERIA WEB SERVER : notes apps
 * 1: Web Server Dapat Menyimpan Catatan (gausah pake database. Cukup simpan pada memory server dalam bentuk array JavaScript.)
 * struktur dari objek notes yang perlu disimpan oleh server:
    {
        id: string, //Server harus memastikan properti id selalu unik
        title: string,
        createdAt: string,
        updatedAt: string,
        tags: array of string,
        body: string,
    },
    Dalam menyimpan atau menambahkan notes, client akan mengirimkan permintaan ke path dan method tersebut dengan membawa data JSON berupa title, tags, body pada request body.
    properti id, createdAt, dan updatedAt harus diolah di sisi server, jadi client tidak akan mengirimkan itu.
 * Jika permintaan client berhasil dilakukan, respons dari server harus memiliki status code 201 (created) dan mengembalikan data dalam bentuk JSON dengan format berikut:
    {
        "status": "success",
        "message": "Catatan berhasil ditambahkan",
        "data": {
            "noteId": "V09YExygSUYogwWJ" //Nilai dari properti noteId diambil dari properti id yang dibuat secara unik.
        }
    }
 * Bila permintaan gagal dilakukan, berikan status code 500 dan kembalikan dengan data JSON dengan format berikut:
    {
        "status": "error",
        "message": "Catatan gagal untuk ditambahkan"
    }

 * 2: Web Server Dapat Menampilkan Catatan
 * Ketika client melakukan permintaan pada path ‘/notes’ dengan method ‘GET’, server harus mengembalikan status code 200 (ok) serta seluruh data notes dalam bentuk array menggunakan JSON
    Jika belum ada catatan satu pun pada array, server bisa mengembalikan data notes dengan nilai array kosong
 * client juga bisa melakukan permintaan untuk mendapatkan catatan secara spesifik menggunakan id melalui path ‘/notes/{id}’ dengan method ‘GET’. Server harus mengembalikan status code 200 (ok) serta nilai satu objek catatan dalam bentuk JSON
 * Bila client melampirkan id catatan yang tidak ditemukan, server harus merespons dengan status code 404 dan data dalam bentuk JSON

 * 3: Web Server Dapat Mengubah Catatan
    Ketika client meminta perubahan catatan, ia akan membuat permintaan ke path ‘/notes/{id}’, menggunakan method ‘PUT’, serta membawa data JSON pada body request yang merupakan data catatan terbaru.
    Jika perubahan data berhasil dilakukan, server harus menanggapi dengan status code 200 (ok) dan membawa data JSON objek berikut pada body respons:
    {
        "status": "success",
        "message": "Catatan berhasil diperbaharui"
    }
 * Perubahan data catatan harus disimpan ke catatan yang sesuai dengan id yang digunakan pada path parameter. Bila id catatan tidak ditemukan, server harus merespons dengan status code 404 (not found) dan data JSON

 * 4: Web Server Dapat Menghapus Catatan
 * client akan membuat permintaan pada path ‘/notes/{id}’ dengan method ‘DELETE’. Ketika permintaan tersebut berhasil, server harus mengembalikan status code 200 (ok) serta data JSON
 * Bila id catatan tidak ditemukan, server harus mengembalikan respons dengan status code 404 dan membawa data JSON
 */